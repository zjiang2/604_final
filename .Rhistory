cci$train$y<- as.factor(cci$train$y)
n_trees = 1:15
L = length(n_trees)
train_aucs = rep(0, L)
val_aucs = rep(0, L)
for (i in 1:L) {
ab_model <- boosting(y ~ .,
data=cci$train, mfinal=n_trees[i])
train_probas <- ab_model$prob[, 2]
train_pred <- prediction(train_probas, cci$train$y)
train_auc.tmp <- performance(train_pred, "auc")
train_aucs[i] <- as.numeric(train_auc.tmp@y.values)
val_probas <- predict.boosting(ab_model, cci$validate)$prob[, 2]
val_pred <- prediction(val_probas, cci$validate$y)
val_auc.tmp <- performance(val_pred, "auc")
val_aucs[i] <- as.numeric(val_auc.tmp@y.values)
}
ada_conv <- data.frame(n_trees <- n_trees,
train_auc <- train_aucs,
val_auc <- val_aucs)
ggplot(data = ada_conv) + geom_line(aes(n_trees, train_auc, colour="Training")) +
geom_line(aes(n_trees, val_auc, colour="Validation")) +
ylim(0.7, 1) + scale_x_continuous(name = "Number of Trees", breaks=n_trees) +
scale_color_manual(name = "Data Set", values=c("Training" = "darkgreen", "Validation" = "orange")) +
theme_minimal() + ylab("AUC")
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model <- boosting(y ~., data=cci$train, mfinal=15)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model <- boosting(y ~., data=cci$train, mfinal=5)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
select_cols <- c("y", "pct_college", "TotalPop", "White", "Black", "Hispanic", "Construction",
"IncomePerCap", "Poverty", "Walk", "percentage20_Donald_Trump",
"Unemployment")
df_quant <- df_main %>% select(select_cols)
df_quant$TotalPop <- log(df_quant$TotalPop)
cci <- split_data(df_quant)
cci$train$y<- as.factor(cci$train$y)
n_trees = 1:15
L = length(n_trees)
train_aucs = rep(0, L)
val_aucs = rep(0, L)
for (i in 1:L) {
ab_model <- boosting(y ~ .,
data=cci$train, mfinal=n_trees[i])
train_probas <- ab_model$prob[, 2]
train_pred <- prediction(train_probas, cci$train$y)
train_auc.tmp <- performance(train_pred, "auc")
train_aucs[i] <- as.numeric(train_auc.tmp@y.values)
val_probas <- predict.boosting(ab_model, cci$validate)$prob[, 2]
val_pred <- prediction(val_probas, cci$validate$y)
val_auc.tmp <- performance(val_pred, "auc")
val_aucs[i] <- as.numeric(val_auc.tmp@y.values)
}
ada_conv <- data.frame(n_trees <- n_trees,
train_auc <- train_aucs,
val_auc <- val_aucs)
ggplot(data = ada_conv) + geom_line(aes(n_trees, train_auc, colour="Training")) +
geom_line(aes(n_trees, val_auc, colour="Validation")) +
ylim(0.7, 1) + scale_x_continuous(name = "Number of Trees", breaks=n_trees) +
scale_color_manual(name = "Data Set", values=c("Training" = "darkgreen", "Validation" = "orange")) +
theme_minimal() + ylab("AUC")
set.seed(1160)
select_cols <- c("y", "pct_college", "TotalPop", "White", "Black", "Hispanic", "Construction",
"IncomePerCap", "Poverty", "Walk", "percentage20_Donald_Trump")
df_quant <- df_main %>% select(select_cols)
df_quant$TotalPop <- log(df_quant$TotalPop)
cci <- split_data(df_quant)
cci$train$y<- as.factor(cci$train$y)
n_trees = 1:15
L = length(n_trees)
train_aucs = rep(0, L)
val_aucs = rep(0, L)
for (i in 1:L) {
ab_model <- boosting(y ~ .,
data=cci$train, mfinal=n_trees[i])
train_probas <- ab_model$prob[, 2]
train_pred <- prediction(train_probas, cci$train$y)
train_auc.tmp <- performance(train_pred, "auc")
train_aucs[i] <- as.numeric(train_auc.tmp@y.values)
val_probas <- predict.boosting(ab_model, cci$validate)$prob[, 2]
val_pred <- prediction(val_probas, cci$validate$y)
val_auc.tmp <- performance(val_pred, "auc")
val_aucs[i] <- as.numeric(val_auc.tmp@y.values)
}
ada_conv <- data.frame(n_trees <- n_trees,
train_auc <- train_aucs,
val_auc <- val_aucs)
ggplot(data = ada_conv) + geom_line(aes(n_trees, train_auc, colour="Training")) +
geom_line(aes(n_trees, val_auc, colour="Validation")) +
ylim(0.7, 1) + scale_x_continuous(name = "Number of Trees", breaks=n_trees) +
scale_color_manual(name = "Data Set", values=c("Training" = "darkgreen", "Validation" = "orange")) +
theme_minimal() + ylab("AUC")
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=8)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
select_cols <- c("y", "pct_college", "TotalPop", "White", "Black", "Hispanic", "Construction",
"IncomePerCap", "Poverty", "Walk", "percentage20_Donald_Trump")
df_quant <- df_main %>% select(select_cols)
df_quant$TotalPop <- log(df_quant$TotalPop)
cci <- split_data(df_quant)
cci$train$y<- as.factor(cci$train$y)
n_trees = 1:20
L = length(n_trees)
train_aucs = rep(0, L)
val_aucs = rep(0, L)
for (i in 1:L) {
ab_model <- boosting(y ~ .,
data=cci$train, mfinal=n_trees[i])
train_probas <- ab_model$prob[, 2]
train_pred <- prediction(train_probas, cci$train$y)
train_auc.tmp <- performance(train_pred, "auc")
train_aucs[i] <- as.numeric(train_auc.tmp@y.values)
val_probas <- predict.boosting(ab_model, cci$validate)$prob[, 2]
val_pred <- prediction(val_probas, cci$validate$y)
val_auc.tmp <- performance(val_pred, "auc")
val_aucs[i] <- as.numeric(val_auc.tmp@y.values)
}
ada_conv <- data.frame(n_trees <- n_trees,
train_auc <- train_aucs,
val_auc <- val_aucs)
ggplot(data = ada_conv) + geom_line(aes(n_trees, train_auc, colour="Training")) +
geom_line(aes(n_trees, val_auc, colour="Validation")) +
ylim(0.7, 1) + scale_x_continuous(name = "Number of Trees", breaks=n_trees) +
scale_color_manual(name = "Data Set", values=c("Training" = "darkgreen", "Validation" = "orange")) +
theme_minimal() + ylab("AUC")
library(gridExtra)
ggplot(data=df_main, aes(x="Black", y="vax_rate_18_plus"))
ggplot(data=df_main, aes(x="Black", y="vax_rate_18_plus")) + geom_point()
ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=White, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Poverty, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Professional, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Service, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Office, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Construction, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Production, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Construction, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Production, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Drive, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Walk, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=PublicWork, y=vax_rate_18_plus)) + geom_point()
ggplot(data=df_main, aes(x=Unemployment, y=vax_rate_18_plus)) + geom_point()
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x="pct_college"))  geom_point() +
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x="pct_college"))  + geom_point() +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point() +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("blue", 0.4)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("grey", 0.4)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("darkgrey", 0.4)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("darkgrey", 0.8)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.8)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("Percent College Educated") + ylab("Adult Vacc. Rate")
p1
# df_corrs <- df_main[c("pct_college", "White", "IncomePerCap", "percentage20_Donald_Trump")]
# df_corrs$LogPopulation <- log(df_main$TotalPop)
# df_corrs <- df_corrs %>% rename(
#   PercentCollege = pct_college,
#   PercentWhite = White,
#   PercentTrump2020 = percentage20_Donald_Trump
# )
# my_cols <- c("red", "blue")
# color_key <- df_main$y + 1
# pairs(df_corrs, pch=19, cex=0.4, col = alpha(my_cols[color_key], 0.4))
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5)) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5), size=0.2) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
# college, income per cap, political leanings, race
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5), size=0.3) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5), size=0.3) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5), size=0.3) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=alpha("black", 0.5), size=0.3) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
# college, income per cap, political leanings, race
plot_color <- "grey"
size = 0.4
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=plot_color), size=0.4) +
# college, income per cap, political leanings, race
plot_color <- "grey"
size = 0.4
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
# college, income per cap, political leanings, race
plot_color <- alpha("blue", 0.6)
size = 0.4
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
# college, income per cap, political leanings, race
plot_color <- alpha("blue", 0.6)
size = 0.4
p1 <- ggplot(data=df_main, aes(x=pct_college, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% College Educated") + ylab("Adult Vacc. Rate")
p2 <- ggplot(data=df_main, aes(x=IncomePerCap, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("Income per Capita ($)") + ylab("Adult Vacc. Rate")
p3 <- ggplot(data=df_main, aes(x=percentage20_Donald_Trump, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Trump Vote, 2020") + ylab("Adult Vacc. Rate")
p4 <- ggplot(data=df_main, aes(x=Black, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Black") + ylab("Adult Vacc. Rate")
p5 <- ggplot(data=df_main, aes(x=Production, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("% Workforce in Production") + ylab("Adult Vacc. Rate")
p6 <- ggplot(data=df_main %>% transform(LogPop = log(TotalPop)), aes(x=LogPop, y=vax_rate_18_plus))  + geom_point(color=plot_color, size=0.4) +
theme_minimal() + xlab("Log Population") + ylab("Adult Vacc. Rate")
grid.arrange(p1, p2, p3, p4, p5, p6, nrow=2, ncol=3)
cor(df_main)
cor(log(df_main$TotalPop), df_main$vax_rate_18_plus)
cor(df_main("Black"), df_main$vax_rate_18_plus)
cor(df_main$Black, df_main$vax_rate_18_plus)
cor(df_main$White, df_main$vax_rate_18_plus)
cor(df_main$Walk, df_main$vax_rate_18_plus)
set.seed(1160)
select_cols <- c("y", "pct_college", "TotalPop", "Black", "Production",
"IncomePerCap", "Poverty", "Walk", "percentage20_Donald_Trump")
df_quant <- df_main %>% select(select_cols)
df_quant$TotalPop <- log(df_quant$TotalPop)
cci <- split_data(df_quant)
cci$train$y<- as.factor(cci$train$y)
n_trees = 1:20
L = length(n_trees)
train_aucs = rep(0, L)
val_aucs = rep(0, L)
for (i in 1:L) {
ab_model <- boosting(y ~ .,
data=cci$train, mfinal=n_trees[i])
train_probas <- ab_model$prob[, 2]
train_pred <- prediction(train_probas, cci$train$y)
train_auc.tmp <- performance(train_pred, "auc")
train_aucs[i] <- as.numeric(train_auc.tmp@y.values)
val_probas <- predict.boosting(ab_model, cci$validate)$prob[, 2]
val_pred <- prediction(val_probas, cci$validate$y)
val_auc.tmp <- performance(val_pred, "auc")
val_aucs[i] <- as.numeric(val_auc.tmp@y.values)
}
ada_conv <- data.frame(n_trees <- n_trees,
train_auc <- train_aucs,
val_auc <- val_aucs)
ggplot(data = ada_conv) + geom_line(aes(n_trees, train_auc, colour="Training")) +
geom_line(aes(n_trees, val_auc, colour="Validation")) +
ylim(0.7, 1) + scale_x_continuous(name = "Number of Trees", breaks=n_trees) +
scale_color_manual(name = "Data Set", values=c("Training" = "darkgreen", "Validation" = "orange")) +
theme_minimal() + ylab("AUC")
train_aucs - val_aucs
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=12)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=15)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=12)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=6)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=12)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=6)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=12)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
cor(df_main$Black, df_main$vax_rate_18_plus)
cor(df_main$Production, df_main$vax_rate_18_plus)
cor(df_main$pct_college, df_main$vax_rate_18_plus)
cor(df_main$income_per_capita, df_main$vax_rate_18_plus)
cor(df_main$IncomePerCap, df_main$vax_rate_18_plus)
cor(df_main$percentage20_Donald_Trump, df_main$vax_rate_18_plus)
cor(log(df_main$TotalPop), df_main$vax_rate_18_plus)
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=6)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=5)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
set.seed(1160)
final_ab_model <- boosting(y ~., data=cci$train, mfinal=6)
test_probas <- predict.boosting(final_ab_model, cci$test)$prob[, 2]
test_pred <- prediction(test_probas, cci$test$y)
test_auc.tmp <- performance(test_pred, "auc")
test_auc <- as.numeric(test_auc.tmp@y.values)
test_acc <- mean(as.integer((test_probas >= 0.5) == cci$test$y))
test_acc; test_auc
final_ab_model$importance
23.7 + 16.5 + 36
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(adabag)
library(ROCR)
setwd("~/Desktop/f21/604/604_final")
